#include "LibLapin.hpp"

namespace arcade
{
  // Mapping caca Mouse Button with MouseKey enum
  std::map<int, MouseKey> LibLapin::m_mouse_keys =
    {
      { BMB_LEFT, M_LEFT_CLICK },
      { BMB_MIDDLE, M_MIDDLE_CLICK },
      { BMB_RIGHT, M_RIGHT_CLICK },
      { BMB_EXTRABUTTON0, M_BT0 },
      { BMB_EXTRABUTTON1, M_BT1 }
    };

  // Mapping caca keyboard map
  std::map<int, KeyboardKey> LibLapin::m_kb_keys =
    {
      { BKS_0, KB_0 },
      { BKS_1, KB_1 },
      { BKS_2, KB_2 },
      { BKS_3, KB_3 },
      { BKS_4, KB_4 },
      { BKS_5, KB_5 },
      { BKS_6, KB_6 },
      { BKS_7, KB_7 },
      { BKS_8, KB_8 },
      { BKS_9, KB_9 },
      { BKS_A, KB_A },
      { BKS_B, KB_B },
      { BKS_C, KB_C },
      { BKS_D, KB_D },
      { BKS_E, KB_E },
      { BKS_F, KB_F },
      { BKS_G, KB_G },
      { BKS_H, KB_H },
      { BKS_I, KB_I },
      { BKS_J, KB_J },
      { BKS_K, KB_K },
      { BKS_L, KB_L },
      { BKS_M, KB_M },
      { BKS_N, KB_N },
      { BKS_O, KB_O },
      { BKS_P, KB_P },
      { BKS_Q, KB_Q },
      { BKS_R, KB_R },
      { BKS_S, KB_S },
      { BKS_T, KB_T },
      { BKS_U, KB_U },
      { BKS_V, KB_V },
      { BKS_W, KB_W },
      { BKS_X, KB_X },
      { BKS_Y, KB_Y },
      { BKS_Z, KB_Z },
      { BKS_BACKSLASH, KB_BACKSLASH },
      { BKS_BACKSPACE, KB_BACKSPACE },
      //{ , KB_CAPSLOCK },
      { BKS_COMMA, KB_COMMA },
      { BKS_DELETE, KB_DELETE },
      { BKS_DOWN, KB_ARROW_DOWN },
      { BKS_END, KB_END },
      { BKS_EQUAL, KB_EQUALS },
      { BKS_ESCAPE, KB_ESCAPE },
      { BKS_F1, KB_FN1 },
      { BKS_F2, KB_FN2 },
      { BKS_F3, KB_FN3 },
      { BKS_F4, KB_FN4 },
      { BKS_F5, KB_FN5 },
      { BKS_F6, KB_FN6 },
      { BKS_F7, KB_FN7 },
      { BKS_F8, KB_FN8 },
      { BKS_F9, KB_FN9 },
      { BKS_F10, KB_FN10 },
      { BKS_F11, KB_FN11 },
      { BKS_F12, KB_FN12 },
      { BKS_HOME, KB_HOME },
      { BKS_NUMPAD0, KB_0 },
      { BKS_NUMPAD1, KB_1 },
      { BKS_NUMPAD2, KB_2 },
      { BKS_NUMPAD3, KB_3 },
      { BKS_NUMPAD4, KB_4 },
      { BKS_NUMPAD5, KB_5 },
      { BKS_NUMPAD6, KB_6 },
      { BKS_NUMPAD7, KB_7 },
      { BKS_NUMPAD8, KB_8 },
      { BKS_NUMPAD9, KB_9 },
      { BKS_SUBTRACT, KB_MINUS },
      { BKS_MULTIPLY, KB_ASTERISK },
      //{ , KB_PERCENT },
      //{ , KB_DOT },
      { BKS_ADD, KB_PLUS },
      { BKS_LALT, KB_LALT },
      { BKS_LCONTROL, KB_LCTRL },
      { BKS_LEFT, KB_ARROW_LEFT },
      { BKS_LBRACKET, KB_LEFTBRACKET },
      { BKS_LSHIFT, KB_LSHIFT },
      { BKS_DASH, KB_MINUS },
      { BKS_PAGEDOWN, KB_PAGEDOWN },
      { BKS_PAGEUP, KB_PAGEUP },
      //{ , KB_DOT },
      { BKS_LALT, KB_RALT },
      { BKS_RCONTROL, KB_RCTRL },
      { BKS_RIGHT, KB_ARROW_RIGHT },
      { BKS_RBRACKET, KB_RIGHTBRACKET },
      { BKS_RSHIFT, KB_RSHIFT },
      { BKS_SEMICOLON, KB_SEMICOLON },
      { BKS_SLASH, KB_SLASH },
      { BKS_SPACE, KB_SPACE },
      { BKS_TAB, KB_TAB },
      { BKS_UP, KB_ARROW_UP },
      //{ , KB_AMPERSAND },
      //{ , KB_ASTERISK },
      //{ , KB_ATSYMBOL },
      //{ , KB_CIRCUMFLEX },
      //{ , KB_COLON },
      //{ , KB_DOLLAR },
      //{ , KB_EXCLAMATION },
      //{ , KB_SUPERIOR },
      //{ , KB_HASHTAG },
      //{ , KB_LEFTPAREN },
      //{ , KB_INFERIOR },
      //{ , KB_PERCENT },
      { BKS_ADD, KB_PLUS },
      //{ , KB_QUESTION },
      //{ , KB_DOUBLEQUOTE },
      //{ , KB_RIGHTPAREN },
      //{ , KB_UNDERSCORE },
      { BKS_RETURN, KB_ENTER }
    };
}
